stages:
  - unit_test
  - build
  - integration
  - acceptance
  - production
  - deploy

variables:
  DOCKER_DRIVER: overlay2
  REGISTRY_IMAGE: registry.mctecloud.ipjtl.net/$CI_PROJECT_NAME

unit_test:
  stage: unit_test
  image: python:3.6
  script:
    - pip install codecov
    - pip install -r requirements.txt
    - ./test.it

build:
  stage: build
  image: docker:latest
  dependencies:
    - unit_test
  script:
    - docker build -t $REGISTRY_IMAGE/ci:job_$CI_PIPELINE_ID .
    - docker push $REGISTRY_IMAGE/ci:job_$CI_PIPELINE_ID
    - docker tag $REGISTRY_IMAGE/ci:job_$CI_PIPELINE_ID $REGISTRY_IMAGE/ci:$CI_COMMIT_SHA
    - docker push $REGISTRY_IMAGE/ci:$CI_COMMIT_SHA
    - docker tag $REGISTRY_IMAGE/ci:job_$CI_PIPELINE_ID $REGISTRY_IMAGE/ci:$CI_COMMIT_REF_SLUG
    - docker push $REGISTRY_IMAGE/ci:$CI_COMMIT_REF_SLUG
    
integration:
  stage: integration
  only: 
    - develop
  dependencies:
    - build
    - unit_test
  before_script:
    - docker pull $REGISTRY_IMAGE/ci:job_$CI_PIPELINE_ID
  script:
    - docker tag $REGISTRY_IMAGE/ci:job_$CI_PIPELINE_ID $REGISTRY_IMAGE:integration
    - docker push $REGISTRY_IMAGE:integration
    
acceptance:
  stage: acceptance
  only: 
    - /^release_/
  dependencies:
    - build
    - unit_test
  before_script:
    - docker pull $REGISTRY_IMAGE/ci:job_$CI_PIPELINE_ID
  script:
    - docker tag $REGISTRY_IMAGE/ci:job_$CI_PIPELINE_ID $REGISTRY_IMAGE:acceptance
    - docker push $REGISTRY_IMAGE:acceptance
    
production:
  stage: production
  only: 
    - master
  dependencies:
    - build
    - unit_test
  before_script:
    - docker pull $REGISTRY_IMAGE/ci:job_$CI_PIPELINE_ID
  script:
    - docker tag $REGISTRY_IMAGE/ci:job_$CI_PIPELINE_ID $REGISTRY_IMAGE:production
    - docker tag $REGISTRY_IMAGE/ci:job_$CI_PIPELINE_ID $REGISTRY_IMAGE:latest
    - docker push $REGISTRY_IMAGE:production
    - docker push $REGISTRY_IMAGE:latest

deploy:
  stage: deploy
  only:
    - master
  dependencies:
    - production
  script:
    - echo DeployToEnv!
