{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "VPC Configuration",
  "Parameters": {
    "IpBlock": {
      "Description": "Set of IP addresses for the VPC",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "10.0.0.0/16",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    },
    "SubnetIpBlock": {
      "Description": "Set of IP addresses for the subnet",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "10.0.0.0/24",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    },
    "BaseImageId": {
      "Description": "Base AMI Id for instance",
      "Type": "AWS::EC2::Image::Id",
      "Default": ""
    },
    "KeyName": {
      "Description": "Key pair name for launched instance",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "Default": ""
    },
    "SshIp": {
      "Description": "IP to restrict SSH access",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    }
  },
  "Resources": {
    "ApiVpc": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": {
          "Ref": "IpBlock"
        },
        "InstanceTenancy": "default",
        "EnableDnsSupport": true,
        "EnableDnsHostnames": true
      }
    },
    "ApiSubnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "ApiVpc"
        },
        "CidrBlock": {
          "Ref": "SubnetIpBlock"
        },
        "MapPublicIpOnLaunch": true
      }
    },
    "VpcInternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {}
    },
    "AttachGateway": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "ApiVpc"
        },
        "InternetGatewayId": {
          "Ref": "VpcInternetGateway"
        }
      }
    },
    "RouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "ApiVpc"
        }
      }
    },
    "Route": {
      "Type": "AWS::EC2::Route",
      "DependsOn": "AttachGateway",
      "Properties": {
        "RouteTableId": {
          "Ref": "RouteTable"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcInternetGateway"
        }
      }
    },
    "SubnetRouteTableAssocation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "ApiSubnet"
        },
        "RouteTableId": {
          "Ref": "RouteTable"
        }
      }
    },
    "NetworkAcl": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {
          "Ref": "ApiVpc"
        }
      }
    },
    "Acl1": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": true,
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "NetworkAcl"
        }
      }
    },
    "Acl2": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "NetworkAcl"
        }
      }
    },
    "SSHAccess": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupName": "SSHAccess",
        "GroupDescription": "Security group granting SSH access from anywhere",
        "VpcId": {
          "Ref": "ApiVpc"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": {
              "Ref": "SshIp"
            }
          }
        ]
      }
    },
    "DockerInstance": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": "t2.micro",
        "ImageId": {
          "Ref": "BaseImageId"
        },
        "KeyName": {
          "Ref": "KeyName"
        },
        "SecurityGroupIds": [
          {
            "Ref": "SSHAccess"
          }
        ],
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "DeleteOnTermination": true,
              "VolumeType": "gp2",
              "VolumeSize": "8"
            }
          }
        ],
        "SubnetId": {
          "Ref": "ApiSubnet"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Docker"
          }
        ]
      }
    }
  },
  "Outputs": {
    "VpcId": {
      "Description": "ID of the VPC",
      "Value": {
        "Ref": "ApiVpc"
      }
    },
    "SubnetId": {
      "Description": "ID of the Subnet",
      "Value": {
        "Ref": "ApiSubnet"
      }
    },
    "InstanceId": {
      "Description": "Instance ID of the Docker instance",
      "Value": {
        "Ref": "DockerInstance"
      }
    },
    "SSHAccessId": {
      "Description": "SSH Access security group ID",
      "Value": {
        "Ref": "SSHAccess"
      }
    }
  }
}
